# Install BIND DNS
- name: Install BIND DNS
  dnf:
    name:
      - bind
      - bind-utils
    state: present

# Ensure necessary directories exist
- name: Ensure /var/named directory exists
  file:
    path: /var/named
    state: directory
    owner: root
    group: named
    mode: '0770'

- name: Ensure logging directory exists
  file:
    path: /var/named/data
    state: directory
    owner: root
    group: named
    mode: '0770'

# Restart the named service so the new zones take effect
- name: Restart named service
  service:
    name: named
    state: restarted
  become: yes

- name: Configure nmcli DNS with internal DNS and ignore auto DNS
  command: >
    nmcli con modify {{ ansible_default_ipv4.interface }}
    ipv4.dns "127.0.0.1"
    ipv4.ignore-auto-dns yes
  become: yes

- name: Debug external DNS resolver IP value
  debug:
    msg: "External DNS resolver IP is: {{ openshift_admin.ansible_resolver_ips | default('No external DNS defined') }}"
  become: yes

- name: Append external DNS resolver via nmcli if provided
  command: >
    nmcli con modify {{ ansible_default_ipv4.interface }} +ipv4.dns "{{ openshift_admin.ansible_resolver_ips }}"
  become: yes
  when: openshift_admin.ansible_resolver_ips is defined and openshift_admin.ansible_resolver_ips != ""

- name: Reload network connection immediately
  command: nmcli con up {{ ansible_default_ipv4.interface }}
  become: yes

- name: Verify DNS configuration
  command: nmcli con show {{ ansible_default_ipv4.interface }}
  register: nmcli_output
  become: yes

- name: Assert external DNS presence if defined
  assert:
    that:
      - "openshift_admin.ansible_resolver_ips in nmcli_output.stdout"
    fail_msg: "External DNS resolver {{ openshift_admin.ansible_resolver_ips }} not configured."
  become: yes
  when: openshift_admin.ansible_resolver_ips is defined and openshift_admin.ansible_resolver_ips != ""


